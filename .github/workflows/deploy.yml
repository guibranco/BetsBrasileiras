name: Build & Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: "6.0.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.0
        with:
          useConfigFile: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Dotnet restore
        run: dotnet restore

      - name: Bump NuGet version
        run:  sed -i "s|<version>.*</version>|<version>${{ env.fullSemVer }}</version>|" BetsBrasileiras/BetsBrasileiras.nuspec

      - name: Pack
        run: dotnet pack BetsBrasileiras/BetsBrasileiras.csproj --no-restore --no-build -p:NuspecFile=BetsBrasileiras.nuspec -p:PackageVersion=${{ env.fullSemVer }} -p:PackageOutputPath=../nupkg

      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/BetsBrasileiras.${{ env.fullSemVer }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Generate Dist
        run: |
          mkdir -p dist
          cp README.md dist/
          cp package.json dist/
          cp data/bets.json dist/
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      
      - name: Bump NPM version
        run: git stash && npm version ${{ env.fullSemVer }}
      
      - name: Push to NPM
        run: cd dist && npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_KEY }}

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      packages: write
    env:
      fullSemVer: ${{ needs.build.outputs.fullSemVer }}

    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          skipIfReleaseExists: true
          allowUpdates: false
          draft: false
          makeLatest: true
          tag: v${{ env.fullSemVer }}
          name: Release v${{ env.fullSemVer }}
          generateReleaseNotes: true
          body: Release ${{ env.fullSemVer }} of ${{ github.repository }}
